name: OpenWrt Builder

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: v24.10.2
  FEEDS_CONF: feeds.conf
  OFFICIAL_FEEDS_VERSION: ;openwrt-24.10
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  DEBIAN_FRONTEND: noninteractive

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      shell: bash
      run: |
        set -eux
        sudo apt-get update
        sudo apt-get install -y \
          build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget \
          qemu-utils
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        ulimit -n 4096 || true

    - name: Clone source code
      working-directory: /workdir
      shell: bash
      run: |
        set -eux
        df -hT $PWD || true
        git clone --branch $REPO_BRANCH --single-branch $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Prepare feeds (respect OFFICIAL_FEEDS_VERSION)
      shell: bash
      run: |
        set -eux
        cd openwrt
        # 基于默认 feeds 生成 feeds.conf
        cp -f feeds.conf.default feeds.conf
        
        # 如果仓库里有自带 feeds.conf（只是额外行），把非空、非注释行拼到 feeds.conf
        if [ -f "$GITHUB_WORKSPACE/${FEEDS_CONF}" ]; then
          grep -vE '^\s*(#|$)' "$GITHUB_WORKSPACE/${FEEDS_CONF}" >> feeds.conf || true
        fi
        
        # 按环境变量重写官方四条 feed 的后缀（;branch 或 ^commit）
        if [ -n "${OFFICIAL_FEEDS_VERSION:-}" ]; then
          case "$OFFICIAL_FEEDS_VERSION" in
            ';'*|'^'*) SUFFIX="$OFFICIAL_FEEDS_VERSION" ;;
            *)         SUFFIX=";$OFFICIAL_FEEDS_VERSION" ;;
          esac
          for name in packages luci routing telephony; do
            sed -i -E "s|^([[:space:]]*src-git[[:space:]]+$name[[:space:]]+[^;^[:space:]]+)([;^][^[:space:]]*)?|\1${SUFFIX}|" feeds.conf
          done
        fi
        
        # DIY_P1（可选）：追加第三方 feed 等
        [ -x "$GITHUB_WORKSPACE/$DIY_P1_SH" ] && "$GITHUB_WORKSPACE/$DIY_P1_SH" || true

    - name: Update & Install feeds
      shell: bash
      run: |
        set -eux
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Patch Rust for CI (download-ci-llvm)
      shell: bash
      run: |
        set -eux
        RUST_MK="openwrt/feeds/packages/lang/rust/Makefile"
        if [ -f "$RUST_MK" ]; then
          # CI 必须不是 true；默认改成 if-unchanged
          sed -i 's/llvm.download-ci-llvm=true/llvm.download-ci-llvm=if-unchanged/' "$RUST_MK"
          # 如果你想最稳当（不依赖 CI 产物），可以强制改为 false：
          # sed -i 's/llvm.download-ci-llvm=[^ ]*/llvm.download-ci-llvm=false/' "$RUST_MK"
        fi

    - name: Load custom configuration
      shell: bash
      run: |
        set -eux
        [ -e files ] && mv files openwrt/files
        [ -e "$CONFIG_FILE" ] && mv "$CONFIG_FILE" openwrt/.config
        [ -x "$DIY_P2_SH" ] && (cd openwrt && "$GITHUB_WORKSPACE/$DIY_P2_SH") || true

    - name: Download package sources
      shell: bash
      run: |
        set -eux
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \; || true
        find dl -size -1024c -exec rm -f {} \; || true

    - name: Compile
      id: compile
      shell: bash
      run: |
        set -eux
        cd openwrt
        echo "::group::Build"
        make -j"$(nproc)" || make -j1 V=s
        echo "::endgroup::"
        echo "status=success" >> "$GITHUB_OUTPUT"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME || true
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> "$GITHUB_ENV"
        echo "FILE_DATE=_$(date +'%Y%m%d%H%M')" >> "$GITHUB_ENV"

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin (optional)
      uses: actions/upload-artifact@v4
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize firmware
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      shell: bash
      run: |
        set -eux
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> "$GITHUB_ENV"
        echo "status=success" >> "$GITHUB_OUTPUT"

    - name: Upload firmware
      uses: actions/upload-artifact@v4
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}/*

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      shell: bash
      run: |
        set -eux
        echo "release_tag=$(date +'%Y.%m.%d-%H%M')" >> "$GITHUB_OUTPUT"
        : > release.txt
        echo "status=success" >> "$GITHUB_OUTPUT"

    - name: Release
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
